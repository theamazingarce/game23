name: Test and Report

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

# Set default permissions to read-only
permissions: read-all

jobs:
  prepare:
    runs-on: ubuntu-latest
    # Only needs read permissions
    permissions:
      contents: read # Required to check out code
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: "24"
          cache: "npm"

      - name: Setup display and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2t64 libxtst6 xauth
          sudo mkdir -p /var/run/dbus
          sudo dbus-daemon --system --fork

      - name: Cache dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Cache Cypress binary
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/package.json') }}

      - name: Verify Cypress
        run: npx cypress verify

  build-validation:
    needs: prepare
    runs-on: ubuntu-latest
    # Needs write permissions to upload artifacts
    permissions:
      contents: write # Required to check out code
      actions: read # Required to use GitHub actions
      id-token: write # Required for attestation
      pull-requests: write # Required to upload artifacts (implicit permission)
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: "24"
          cache: "npm"

      - name: Cache dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Check licenses
        run: npm run test:licenses

      - name: Generate SBOM
        uses: anchore/sbom-action@f8bdd1d8ac5e901a77a92f111440fdb1b593736b # v0.20.6
        id: sbom
        with:
          format: spdx-json
          output-file: game.spdx.json
          artifact-name: game


      - name: Install SBOMQS
        run: |
          curl -LO https://github.com/interlynk-io/sbomqs/releases/download/v1.2.0/sbomqs-linux-amd64
          sudo mv sbomqs-linux-amd64 /usr/local/bin/sbomqs
          sudo chmod a+x /usr/local/bin/sbomqs

      - name: Details SBOM Quality
        run: sbomqs score game.spdx.json --detailed

      - name: Check SBOM Quality
        run: |
          score=$(sbomqs score game.spdx.json --json | jq '.files[0].avg_score')
          echo "SBOM Score: $score/10"
          
          if (( $(echo "$score < 7.0" | bc -l) )); then
            echo "::error::SBOM quality score too low: $score"
            exit 1
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: build-output
          path: dist
          if-no-files-found: error

  unit-tests:
    needs: [prepare, build-validation]
    runs-on: ubuntu-latest
    # Needs write permissions to upload artifacts
    permissions:
      contents: write # Required to check out code
      actions: read # Required to use GitHub actions
      checks: write # Required to upload artifacts (implicit permission)
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: "24"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run unit tests with coverage
        run: npm run test:ci
        env:
          JEST_JUNIT_OUTPUT_DIR: "coverage"
          JEST_JUNIT_OUTPUT_NAME: "junit.xml"

      - name: Upload coverage report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverage-report
          path: coverage
          if-no-files-found: error

  e2e-tests:
    needs: [prepare, build-validation]
    runs-on: ubuntu-latest
    # Needs write permissions to upload artifacts
    permissions:
      contents: write # Required to check out code
      actions: read # Required to use GitHub actions
      checks: write # Required to upload artifacts (implicit permission)
      pull-requests: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: "24"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Start app and run Cypress tests
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1280x720x24" npm run test:e2e
        env:
          CYPRESS_VIDEO: true

      - name: Upload Cypress results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: cypress-results
          path: |
            cypress/videos
            cypress/screenshots
            cypress/results

  report:
    needs: [unit-tests, e2e-tests]
    runs-on: ubuntu-latest
    if: always()
    # Needs write permissions to upload artifacts
    permissions:
      contents: write # Required to check out code
      actions: read # Required to use GitHub actions
      checks: write # Required to upload artifacts (implicit permission)
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Download all artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: artifacts

      - name: Upload combined reports
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-reports
          path: |
            coverage
            artifacts/cypress-results
